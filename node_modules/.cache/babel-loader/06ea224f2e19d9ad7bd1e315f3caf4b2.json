{"remainingRequest":"/Users/devs/Desktop/task/node_modules/babel-loader/lib/index.js!/Users/devs/Desktop/task/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/devs/Desktop/task/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/devs/Desktop/task/src/App.vue?vue&type=script&lang=js","dependencies":[{"path":"/Users/devs/Desktop/task/src/App.vue","mtime":1627281913785},{"path":"/Users/devs/Desktop/task/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/devs/Desktop/task/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/devs/Desktop/task/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/devs/Desktop/task/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["/Users/devs/Desktop/task/src/App.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n    <Header title=\"Task Tracker\" @toggle-add-task=\"toggleAddTask\" :showAddTask=\"ShowForm\"/>\n     <div v-show=\"ShowForm\">\n       <AddTask @add-task=\"TaskFormSubmit\"/>\n     </div>\n    <Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"DeleteTask\" :tasks=\"tasks\"/>\n  </div>\n</template>\n\n<script>\nimport Header from './components/Header.vue';\nimport Tasks from './components/Tasks.vue';\nimport AddTask from './components/AddTask.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    Header,Tasks,AddTask\n  },\n  data() {\n    return {\n      tasks:[],\n      ShowForm:false\n    } \n  },\n  methods: {\n    async DeleteTask(id){\n      if(confirm('Are you sure?')){\n        const res = await fetch(`api/tasks//${id}`,{\n          method:\"DELETE\"\n        });\n         res.status === 200 ? (this.tasks = this.tasks.filter((task) => task.id!==id)) : alert(\"Error deleting task\");\n      }else{\n        alert(\"Task is safe.\");\n      }\n    },\n    toggleAddTask(){\n        this.ShowForm = !this.ShowForm;\n    },\n    async toggleReminder(id){\n    const taskToToggle = await this.fetchTask(id)\n      const updTask = { ...taskToToggle, reminder: !taskToToggle.reminder }\n      const res = await fetch(`api/tasks/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-type': 'application/json',\n        },\n        body: JSON.stringify(updTask),\n      })\n      const data = await res.json()\n      this.tasks = this.tasks.map((task) =>\n        task.id === id ? { ...task, reminder: data.reminder } : task\n      )\n    },\n    async TaskFormSubmit(task){\n      const res = await fetch(\"api/tasks\",{\n        method:\"POST\",\n        headers:{\n          'Content-type':'application/json',\n        },\n        body:JSON.stringify(task),\n      });\n      const data = await res.json();\n      this.tasks = [...this.tasks,data];\n      this.ShowForm = !this.ShowForm;\n    },\n    async fetchTasks(){\n      const res = await fetch(\"api/tasks\");\n      const data = await res.json();\n      return data;\n    },\n    async fetchTask(id){\n      const res = await fetch(`api/tasks/${id}`);\n      const data = await res.json();\n      return data;\n    }\n  },  \n  async created() {\n    this.tasks = await this.fetchTasks();\n  },\n}\n</script>\n<style>\n@import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\nbody {\n  font-family: 'Poppins', sans-serif;\n}\n.container {\n  max-width: 500px;\n  margin: 30px auto;\n  overflow: auto;\n  min-height: 300px;\n  border: 1px solid steelblue;\n  padding: 30px;\n  border-radius: 5px;\n}\n.btn {\n  display: inline-block;\n  background: #000;\n  color: #fff;\n  border: none;\n  padding: 10px 20px;\n  margin: 5px;\n  border-radius: 5px;\n  cursor: pointer;\n  text-decoration: none;\n  font-size: 15px;\n  font-family: inherit;\n}\n.btn:focus {\n  outline: none;\n}\n.btn:active {\n  transform: scale(0.98);\n}\n.btn-block {\n  display: block;\n  width: 100%;\n}\n</style>\n"],"sourceRoot":""}]}